name: Build and Release

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  DOTNET_VERSION: '7.0.x'

permissions:
  contents: write
  pull-requests: write

jobs:
  build:
    name: Build and Package
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore qatch.csproj

      - name: Build
        run: dotnet build qatch.csproj --configuration Release --no-restore

      - name: Publish
        run: |
          dotnet publish qatch.csproj -c Release -o ./ --no-build --nologo
          find ./ -name "*.pdb" -type f -delete

      - name: Create versioned archive
        run: |
          VERSION=$(grep -oP '<Version>\K[^<]+' qatch.csproj)
          zip -r qatch-v$VERSION.zip ./*

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: qatch-release
          path: qatch-*.zip

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get base version
        id: get_version
        run: |
          VERSION=$(grep -oP '<Version>\K[^<]+' qatch.csproj)
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      - name: Compute release tag
        id: compute_tag
        run: |
          BASE_TAG="v${{ steps.get_version.outputs.version }}"
          MAX_BUILD=0

          if git rev-list $BASE_TAG; then
              echo "Base tag exists, checking for build increments..."
              MAX_BUILD=$(git tag | grep "^${BASE_TAG}+" | cut -d+ -f2 | sort -n | tail -n1)
              [ -z "$MAX_BUILD" ] && MAX_BUILD=0
          fi

          NEXT_BUILD=$((MAX_BUILD + 1))
          NEW_TAG="${BASE_TAG}+${NEXT_BUILD}"
          echo "new_tag=${NEW_TAG}" >> $GITHUB_OUTPUT
          echo "max_build=${MAX_BUILD}" >> $GITHUB_OUTPUT
          echo "next_build=${NEXT_BUILD}" >> $GITHUB_OUTPUT

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: qatch-release
          path: ./release-artifacts

      - name: Rename artifact with build tag
        run: |
          OLD_NAME="qatch-v${{ steps.get_version.outputs.version }}.zip"
          NEW_NAME="qatch-${{ steps.compute_tag.outputs.new_tag }}.zip"
          mv "./release-artifacts/$OLD_NAME" "./release-artifacts/$NEW_NAME"

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.compute_tag.outputs.new_tag }}
          name: Release ${{ steps.compute_tag.outputs.new_tag }}
          body: |
            Automated release with incremental build number
            Base version: ${{ steps.get_version.outputs.version }}
            Build number: +${{ steps.compute_tag.outputs.next_build }}
          files: |
            release-artifacts/qatch-*.zip
          generate_release_notes: true
